"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var PropTypes = require("prop-types");
var withValidateEventEmitter_1 = require("./withValidateEventEmitter");
var FieldsStore_1 = require("./FieldsStore");
var FormWithConstraintsComponent = (function (_super) {
    __extends(FormWithConstraintsComponent, _super);
    function FormWithConstraintsComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return FormWithConstraintsComponent;
}(React.Component));
exports.FormWithConstraintsComponent = FormWithConstraintsComponent;
var FormWithConstraints = (function (_super) {
    __extends(FormWithConstraints, _super);
    function FormWithConstraints() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.fieldsStore = new FieldsStore_1.FieldsStore();
        _this.fieldFeedbacksKey = 0;
        return _this;
    }
    FormWithConstraints.prototype.getChildContext = function () {
        return {
            form: this
        };
    };
    FormWithConstraints.prototype.computeFieldFeedbacksKey = function () {
        return this.fieldFeedbacksKey++;
    };
    FormWithConstraints.prototype.validateFields = function () {
        var _this = this;
        var inputsOrNames = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            inputsOrNames[_i] = arguments[_i];
        }
        var inputs = inputsOrNames.filter(function (inputOrName) { return typeof inputOrName !== 'string'; });
        var fieldNames = inputsOrNames.filter(function (inputOrName) { return typeof inputOrName === 'string'; });
        var otherInputs = [];
        if (inputsOrNames.length === 0) {
            otherInputs = this.form.querySelectorAll('[name]');
        }
        if (fieldNames.length > 0) {
            var selectors = fieldNames.map(function (fieldName) { return "[name=\"" + fieldName + "\"]"; });
            otherInputs = this.form.querySelectorAll(selectors.join(', '));
        }
        __spread(inputs, otherInputs).forEach(function (input) { return _this.emitValidateEvent(input); });
    };
    FormWithConstraints.prototype.isValid = function () {
        var fieldNames = Object.keys(this.fieldsStore.fields);
        return !(_a = this.fieldsStore).containErrors.apply(_a, __spread(fieldNames));
        var _a;
    };
    FormWithConstraints.prototype.render = function () {
        var _this = this;
        var _a = this.props, children = _a.children, formProps = __rest(_a, ["children"]);
        return React.createElement("form", __assign({ ref: function (form) { return _this.form = form; } }, formProps), children);
    };
    FormWithConstraints.childContextTypes = {
        form: PropTypes.object.isRequired
    };
    return FormWithConstraints;
}(withValidateEventEmitter_1.withValidateEventEmitter(FormWithConstraintsComponent)));
exports.FormWithConstraints = FormWithConstraints;
//# sourceMappingURL=FormWithConstraints.js.map