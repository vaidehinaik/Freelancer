"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var PropTypes = require("prop-types");
var withValidateEventEmitter_1 = require("./withValidateEventEmitter");
var FieldsStore_1 = require("./FieldsStore");
var FieldFeedbacksComponent = (function (_super) {
    __extends(FieldFeedbacksComponent, _super);
    function FieldFeedbacksComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return FieldFeedbacksComponent;
}(React.Component));
exports.FieldFeedbacksComponent = FieldFeedbacksComponent;
var FieldFeedbacks = (function (_super) {
    __extends(FieldFeedbacks, _super);
    function FieldFeedbacks(props, context) {
        var _this = _super.call(this, props) || this;
        _this.fieldFeedbackKey = 0;
        _this.validate = _this.validate.bind(_this);
        _this.reRender = _this.reRender.bind(_this);
        _this.key = context.form.computeFieldFeedbacksKey();
        return _this;
    }
    FieldFeedbacks.prototype.getChildContext = function () {
        return {
            fieldFeedbacks: this
        };
    };
    FieldFeedbacks.prototype.computeFieldFeedbackKey = function () {
        return this.key + this.fieldFeedbackKey++ / 10;
    };
    FieldFeedbacks.prototype.componentWillMount = function () {
        var fieldName = this.props.for;
        this.context.form.fieldsStore.addField(fieldName);
        this.context.form.addValidateEventListener(this.validate);
        this.context.form.fieldsStore.addListener(FieldsStore_1.FieldEvent.Updated, this.reRender);
    };
    FieldFeedbacks.prototype.componentWillUnmount = function () {
        var fieldName = this.props.for;
        this.context.form.fieldsStore.removeField(fieldName);
        this.context.form.removeValidateEventListener(this.validate);
        this.context.form.fieldsStore.removeListener(FieldsStore_1.FieldEvent.Updated, this.reRender);
    };
    FieldFeedbacks.prototype.validate = function (input) {
        var fieldName = this.props.for;
        if (input.name === fieldName) {
            this.context.form.fieldsStore.removeFieldFor(fieldName, this.key);
            this.emitValidateEvent(input);
        }
    };
    FieldFeedbacks.prototype.reRender = function (_fieldName) {
        var fieldName = this.props.for;
        if (fieldName === _fieldName) {
            this.forceUpdate();
        }
    };
    FieldFeedbacks.prototype.render = function () {
        var _a = this.props, fieldName = _a.for, show = _a.show, children = _a.children, divProps = __rest(_a, ["for", "show", "children"]);
        return React.createElement("div", __assign({}, divProps), children);
    };
    FieldFeedbacks.defaultProps = {
        show: 'first'
    };
    FieldFeedbacks.contextTypes = {
        form: PropTypes.object.isRequired
    };
    FieldFeedbacks.childContextTypes = {
        fieldFeedbacks: PropTypes.object.isRequired
    };
    return FieldFeedbacks;
}(withValidateEventEmitter_1.withValidateEventEmitter(FieldFeedbacksComponent)));
exports.FieldFeedbacks = FieldFeedbacks;
//# sourceMappingURL=FieldFeedbacks.js.map