import { Fields, Field } from './Fields';
import { EventEmitter } from './EventEmitter';
export declare enum FieldEvent {
    Added = "FIELD_ADDED",
    Removed = "FIELD_REMOVED",
    Updated = "FIELD_UPDATED",
}
export declare class FieldsStore extends EventEmitter {
    fields: Fields;
    addField(fieldName: string): void;
    removeField(fieldName: string): void;
    cloneField(fieldName: string): Field;
    updateField(fieldName: string, field: Field): void;
    removeFieldFor(fieldName: string, fieldFeedbacksKey: number): void;
    getFieldFor(fieldName: string, fieldFeedbacksKey: number): Readonly<Field>;
    containErrors(...fieldNames: string[]): boolean;
    containWarnings(...fieldNames: string[]): boolean;
    containInfos(...fieldNames: string[]): boolean;
    areValidDirtyWithoutWarnings(...fieldNames: string[]): boolean;
}
