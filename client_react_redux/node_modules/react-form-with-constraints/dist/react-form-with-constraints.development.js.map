{"version":3,"file":"react-form-with-constraints.development.js","sources":["../src/EventEmitter.ts","../src/withValidateEventEmitter.ts","../src/fieldWithoutFeedback.ts","../src/FieldsStore.ts","../src/FormWithConstraints.tsx","../src/FieldFeedbacks.tsx","../src/FieldFeedback.tsx"],"sourcesContent":["// FIXME\n// See Thoughts about variadic generics? https://github.com/Microsoft/TypeScript/issues/1773\n// See Proposal: Variadic Kinds -- Give specific types to variadic functions https://github.com/Microsoft/TypeScript/issues/5453\nexport type Args = any[];\n\nexport type Listener = (...args: Args) => void;\n\nexport class EventEmitter {\n  listeners = new Map<string, Listener[]>();\n\n  emit(eventName: string, ...args: Args) {\n    const listeners = this.listeners.get(eventName)!;\n\n    // Assert disabled: mess with the unit tests\n    //console.assert(listeners !== undefined, `Unknown event '${eventName}'`);\n\n    if (listeners !== undefined) {\n      console.assert(listeners.length > 0, `No listener for event '${eventName}'`);\n      listeners.forEach(listener => listener(...args));\n    }\n  }\n\n  addListener(eventName: string, listener: Listener) {\n    if (!this.listeners.has(eventName)) this.listeners.set(eventName, []);\n    const listeners = this.listeners.get(eventName)!;\n    console.assert(listeners.indexOf(listener) === -1, `Listener already added for event '${eventName}'`);\n    listeners.push(listener);\n  }\n\n  // See https://nodejs.org/api/events.html#events_emitter_removelistener_eventname_listener\n  // \"removeListener will remove, at most, one instance of a listener from the listener array.\n  // If any single listener has been added multiple times to the listener array for the specified eventName,\n  // then removeListener must be called multiple times to remove each instance.\"\n  removeListener(eventName: string, listener: Listener) {\n    const listeners = this.listeners.get(eventName)!;\n    console.assert(listeners !== undefined, `Unknown event '${eventName}'`);\n\n    const index = listeners.lastIndexOf(listener);\n    console.assert(index > -1, `Listener not found for event '${eventName}'`);\n    listeners.splice(index, 1);\n\n    if (listeners.length === 0) this.listeners.delete(eventName);\n  }\n}\n","import { EventEmitter } from './EventEmitter';\nimport Input from './Input';\nimport Constructor from './Constructor';\n\nexport const ValidateEvent = 'VALIDATE_EVENT';\n\nexport type ValidateEventListener = (input: Input) => void;\n\nexport interface IValidateEventEmitter {\n  emitValidateEvent(input: Input): void;\n  addValidateEventListener(listener: ValidateEventListener): void;\n  removeValidateEventListener(listener: ValidateEventListener): void;\n}\n\n// See TypeScript 2.2 Support for Mix-in classes https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-2.html\nexport function withValidateEventEmitter<TBase extends Constructor<{}>>(Base: TBase) {\n  return class ValidateEventEmitter extends Base implements IValidateEventEmitter {\n    validateEventEmitter = new EventEmitter();\n\n    emitValidateEvent(input: Input) {\n      this.validateEventEmitter.emit(ValidateEvent, input);\n    }\n\n    addValidateEventListener(listener: ValidateEventListener) {\n      this.validateEventEmitter.addListener(ValidateEvent, listener);\n    }\n\n    removeValidateEventListener(listener: ValidateEventListener) {\n      this.validateEventEmitter.removeListener(ValidateEvent, listener);\n    }\n  };\n}\n","import { Field } from './index';\n\nconst fieldWithoutFeedback: Readonly<Field> = {\n  dirty: false,\n  errors: new Set(),\n  warnings: new Set(),\n  infos: new Set(),\n  validationMessage: ''\n};\n\nexport default fieldWithoutFeedback;\n","import { Fields, Field } from './Fields';\nimport { EventEmitter } from './EventEmitter';\nimport fieldWithoutFeedback from './fieldWithoutFeedback';\n\nexport enum FieldEvent {\n  Added = 'FIELD_ADDED',\n  Removed = 'FIELD_REMOVED',\n  Updated = 'FIELD_UPDATED'\n}\n\nexport class FieldsStore extends EventEmitter {\n  // Why Object.create(null) insteaf of just {}? See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Objects_and_maps_compared\n  fields: Fields = Object.create(null);\n\n  addField(fieldName: string) {\n    if (this.fields[fieldName] === undefined) {\n      const newField = fieldWithoutFeedback;\n      this.fields[fieldName] = newField;\n      this.emit(FieldEvent.Added, fieldName, newField);\n    }\n  }\n\n  removeField(fieldName: string) {\n    console.assert(this.fields[fieldName] !== undefined, `Unknown field '${fieldName}'`);\n    delete this.fields[fieldName];\n    this.emit(FieldEvent.Removed, fieldName);\n  }\n\n  cloneField(fieldName: string) {\n    const field = this.fields[fieldName]!;\n    console.assert(field !== undefined, `Unknown field '${fieldName}'`);\n    const newField: Field = {\n      dirty: field.dirty,\n      errors: new Set(field.errors),\n      warnings: new Set(field.warnings),\n      infos: new Set(field.infos),\n      validationMessage: field.validationMessage\n    };\n    return newField;\n  }\n\n  updateField(fieldName: string, field: Field) {\n    console.assert(this.fields[fieldName] !== undefined, `Unknown field '${fieldName}'`);\n    this.fields[fieldName] = field;\n    this.emit(FieldEvent.Updated, fieldName);\n  }\n\n  // Clear the errors/warnings/infos each time we re-validate the input,\n  // this solves the problem with the errors order and show=\"first\", example:\n  // <FieldFeedbacks for=\"username\" show=\"first\"> key=0\n  //   <FieldFeedback ...> key=0.0\n  //   <FieldFeedback ...> key=0.1\n  // </FieldFeedbacks>\n  // We want the first FieldFeedback in the DOM that matches to be displayed\n  // + we have a special case where we could have multiple FieldFeedbacks for the same field\n  removeFieldFor(fieldName: string, fieldFeedbacksKey: number) {\n    const field = this.fields[fieldName]!;\n    console.assert(field !== undefined, `Unknown field '${fieldName}'`);\n\n    // reject is the opposite of filter, see https://lodash.com/docs/#reject\n    // Example: fieldFeedbacksKey = 5, fieldFeedbackKey = 5.2, Math.floor(5.2) = 5\n    const reject = (fieldFeedbackKey: number) => fieldFeedbacksKey !== Math.floor(fieldFeedbackKey);\n\n    field.errors = new Set([...field.errors].filter(reject));\n    field.warnings = new Set([...field.warnings].filter(reject));\n    field.infos = new Set([...field.infos].filter(reject));\n\n    this.emit(FieldEvent.Updated, fieldName);\n  }\n\n  // Retrieve errors/warnings/infos only related to a given FieldFeedbacks\n  getFieldFor(fieldName: string, fieldFeedbacksKey: number) {\n    const field = this.fields[fieldName]!;\n    console.assert(field !== undefined, `Unknown field '${fieldName}'`);\n\n    // Example: fieldFeedbacksKey = 5, fieldFeedbackKey = 5.2, Math.floor(5.2) = 5\n    const filter = (fieldFeedbackKey: number) => fieldFeedbacksKey === Math.floor(fieldFeedbackKey);\n\n    const fieldFor: Readonly<Field> = {\n      dirty: field.dirty,\n      errors: new Set([...field.errors].filter(filter)),\n      warnings: new Set([...field.warnings].filter(filter)),\n      infos: new Set([...field.infos].filter(filter)),\n      validationMessage: field.validationMessage\n    };\n    return fieldFor;\n  }\n\n  containErrors(...fieldNames: string[]) {\n    return fieldNames.some(fieldName => {\n      const field = this.fields[fieldName];\n      return field !== undefined && field.errors.size > 0;\n    });\n  }\n\n  containWarnings(...fieldNames: string[]) {\n    return fieldNames.some(fieldName => {\n      const field = this.fields[fieldName];\n      return field !== undefined && field.warnings.size > 0;\n    });\n  }\n\n  containInfos(...fieldNames: string[]) {\n    return fieldNames.some(fieldName => {\n      const field = this.fields[fieldName];\n      return field !== undefined && field.infos.size > 0;\n    });\n  }\n\n  areValidDirtyWithoutWarnings(...fieldNames: string[]) {\n    return fieldNames.some(fieldName => {\n      const field = this.fields[fieldName];\n      return field !== undefined && field.dirty === true && field.errors.size === 0 && field.warnings.size === 0;\n    });\n  }\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { IValidateEventEmitter, withValidateEventEmitter } from './withValidateEventEmitter';\n// @ts-ignore\n// TS6133: 'EventEmitter' is declared but its value is never read.\n// FIXME See https://github.com/Microsoft/TypeScript/issues/9944#issuecomment-309903027\nimport { EventEmitter } from './EventEmitter';\nimport Input from './Input';\nimport { FieldsStore } from './FieldsStore';\n\n// See Form data validation https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Form_validation\n// See ReactJS Form Validation Approaches http://moduscreate.com/reactjs-form-validation-approaches/\n\n/*\nFormWithConstraints\n  - input\n  - FieldFeedbacks\n    - FieldFeedback\n    - FieldFeedback\n    - ...\n  - input\n  - FieldFeedbacks\n    - FieldFeedback\n    - FieldFeedback\n    - ...\n  - ...\n\nFormWithConstraints contains the FieldsStore:\n{\n  username: {\n    dirty: true,\n    errors: [0.0], // List of FieldFeedback keys\n    warnings: [0.2, 1.1],\n    infos: []\n  },\n  password: {\n    dirty: false,\n    errors: [],\n    warnings: [],\n    infos: []\n  }\n}\nFieldsStore is passed to FieldFeedbacks and FieldFeedback thanks to React context.\n\nMost of the intelligence is inside FieldFeedback validate() and render()\n\nWhen an input changes (validateFields()):\n => FormWithConstraints notifies all FieldFeedbacks\n  => FieldFeedbacks filters unrelated input changes and then notifies its FieldFeedback (validate())\n   => FieldFeedback updates the FieldsStore and emits an event (validate())\n    => FieldFeedbacks re-renders\n*/\n\nexport interface FormWithConstraintsChildContext {\n  form: IFormWithConstraints;\n}\n\nexport interface FormWithConstraintsProps extends React.FormHTMLAttributes<HTMLFormElement> {}\n\nexport interface IFormWithConstraints extends IValidateEventEmitter {\n  fieldsStore: FieldsStore;\n  computeFieldFeedbacksKey(): number;\n}\n\nexport class FormWithConstraintsComponent extends React.Component<FormWithConstraintsProps> {}\nexport class FormWithConstraints extends withValidateEventEmitter(FormWithConstraintsComponent) implements IFormWithConstraints {\n  static childContextTypes = {\n    form: PropTypes.object.isRequired\n  };\n  getChildContext(): FormWithConstraintsChildContext {\n    return {\n      form: this\n    };\n  }\n\n  form: HTMLFormElement;\n\n  fieldsStore = new FieldsStore();\n\n  private fieldFeedbacksKey = 0;\n  computeFieldFeedbacksKey() {\n    return this.fieldFeedbacksKey++;\n  }\n\n  /**\n   * Validates the given fields, either HTMLInputElements or field names.\n   * If called without arguments, validates all fields ($('[name]')).\n   */\n  validateFields(...inputsOrNames: Array<Input | string>) {\n    const inputs = inputsOrNames.filter(inputOrName => typeof inputOrName !== 'string') as Input[];\n    const fieldNames = inputsOrNames.filter(inputOrName => typeof inputOrName === 'string') as string[];\n\n    let otherInputs: Input[] = [];\n\n    // [name] matches <input name=\"...\">, <select name=\"...\">, <button name=\"...\">, ...\n    if (inputsOrNames.length === 0) {\n      otherInputs = this.form.querySelectorAll('[name]') as any;\n    }\n    if (fieldNames.length > 0) {\n      const selectors = fieldNames.map(fieldName => `[name=\"${fieldName}\"]`);\n      otherInputs = this.form.querySelectorAll(selectors.join(', ')) as any;\n    }\n\n    [\n      ...inputs,\n      ...otherInputs\n    ].forEach(input => this.emitValidateEvent(input));\n  }\n\n  // Lazy check => the fields structure might be incomplete\n  isValid() {\n    const fieldNames = Object.keys(this.fieldsStore.fields);\n    return !this.fieldsStore.containErrors(...fieldNames);\n  }\n\n  render() {\n    const { children, ...formProps } = this.props;\n    return <form ref={form => this.form = form!} {...formProps}>{children}</form>;\n  }\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { FormWithConstraintsChildContext } from './FormWithConstraints';\nimport { IValidateEventEmitter, withValidateEventEmitter } from './withValidateEventEmitter';\n// @ts-ignore\n// TS6133: 'EventEmitter' is declared but its value is never read.\n// FIXME See https://github.com/Microsoft/TypeScript/issues/9944#issuecomment-309903027\nimport { EventEmitter } from './EventEmitter';\nimport Input from './Input';\nimport { FieldEvent } from './FieldsStore';\n\nexport interface FieldFeedbacksProps extends React.HTMLAttributes<HTMLDivElement> {\n  for: string;\n\n  /**\n   * first => shows only the first error or warning (if no error) encountered, infos are always displayed\n   * all => shows everything\n   */\n  show?: 'first' | 'all';\n}\n\nexport interface FieldFeedbacksChildContext {\n  fieldFeedbacks: IFieldFeedbacks;\n}\n\nexport interface IFieldFeedbacks extends IValidateEventEmitter {\n  props: FieldFeedbacksProps;\n  key: number;\n  computeFieldFeedbackKey(): number;\n}\n\nexport class FieldFeedbacksComponent extends React.Component<FieldFeedbacksProps> {}\nexport class FieldFeedbacks extends withValidateEventEmitter(FieldFeedbacksComponent) {\n  static defaultProps: Partial<FieldFeedbacksProps> = {\n    show: 'first'\n  };\n\n  static contextTypes = {\n    form: PropTypes.object.isRequired\n  };\n  context: FormWithConstraintsChildContext;\n\n  static childContextTypes = {\n    fieldFeedbacks: PropTypes.object.isRequired\n  };\n  getChildContext(): FieldFeedbacksChildContext {\n    return {\n      fieldFeedbacks: this\n    };\n  }\n\n  key: number;\n\n  constructor(props: FieldFeedbacksProps, context: FormWithConstraintsChildContext) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n    this.reRender = this.reRender.bind(this);\n\n    this.key = context.form.computeFieldFeedbacksKey();\n  }\n\n  // FieldFeedback key = FieldFeedbacks key + increment\n  // Examples:\n  // 0.0, 0.1, 0.2 with 0 being the FieldFeedbacks key\n  // 1.0, 1.1, 1.2 with 1 being the FieldFeedbacks key\n  //\n  // This solves the problem when having multiple FieldFeedbacks with the same for attribute:\n  // <FieldFeedbacks for=\"username\" show=\"first\"> key=0\n  //   <FieldFeedback ...> key=0.0\n  //   <FieldFeedback ...> key=0.1\n  // </FieldFeedbacks>\n  // <FieldFeedbacks for=\"username\" show=\"all\"> key=1\n  //   <FieldFeedback ...> key=1.0\n  //   <FieldFeedback ...> key=1.1\n  //   <FieldFeedback ...> key=1.2\n  // </FieldFeedbacks>\n  //\n  // We could use a string here instead of a number\n  private fieldFeedbackKey = 0;\n  computeFieldFeedbackKey() {\n    // Example: this.key = 5, this.fieldFeedbackKey = 2 => 5 + 2 / 10 = 5 + 0.2 = 5.2\n    return this.key + this.fieldFeedbackKey++ / 10;\n  }\n\n  componentWillMount() {\n    const fieldName = this.props.for;\n    this.context.form.fieldsStore.addField(fieldName);\n\n    this.context.form.addValidateEventListener(this.validate);\n    this.context.form.fieldsStore.addListener(FieldEvent.Updated, this.reRender);\n  }\n\n  componentWillUnmount() {\n    const fieldName = this.props.for;\n    this.context.form.fieldsStore.removeField(fieldName);\n\n    this.context.form.removeValidateEventListener(this.validate);\n    this.context.form.fieldsStore.removeListener(FieldEvent.Updated, this.reRender);\n  }\n\n  validate(input: Input) {\n    const { for: fieldName } = this.props;\n\n    if (input.name === fieldName) { // Ignore the event if it's not for us\n      // Clear the errors/warnings/infos each time we re-validate the input\n      this.context.form.fieldsStore.removeFieldFor(fieldName, this.key);\n\n      this.emitValidateEvent(input);\n    }\n  }\n\n  reRender(_fieldName: string) {\n    const { for: fieldName } = this.props;\n    if (fieldName === _fieldName) { // Ignore the event if it's not for us\n      this.forceUpdate();\n    }\n  }\n\n  render() {\n    const { for: fieldName, show, children, ...divProps } = this.props;\n    return <div {...divProps}>{children}</div>;\n  }\n}\n","import * as React from 'react';\nimport * as PropTypes from 'prop-types';\n\nimport { FormWithConstraintsChildContext } from './FormWithConstraints';\nimport { FieldFeedbacksChildContext } from './FieldFeedbacks';\nimport Input from './Input';\n\nexport type WhenString =\n  | '*'\n  | 'badInput'        // input type=\"number\"\n  | 'patternMismatch' // pattern attribute\n  | 'rangeOverflow'   // max attribute\n  | 'rangeUnderflow'  // min attribute\n  | 'stepMismatch'    // step attribute\n  | 'tooLong'         // maxlength attribute\n  | 'tooShort'        // minlength attribute\n  | 'typeMismatch'    // input type=\"email\" or input type=\"url\"\n  | 'valueMissing';   // required attribute\nexport type WhenFn = (value: string) => boolean;\nexport type When = WhenString | WhenFn;\n\nexport interface FieldFeedbackProps extends React.HTMLAttributes<HTMLDivElement> {\n  when: When;\n  error?: boolean;\n  warning?: boolean;\n  info?: boolean;\n}\n\nexport type FieldFeedbackContext = FormWithConstraintsChildContext & FieldFeedbacksChildContext;\n\nexport class FieldFeedback extends React.Component<FieldFeedbackProps> {\n  static contextTypes = {\n    form: PropTypes.object.isRequired,\n    fieldFeedbacks: PropTypes.object.isRequired\n  };\n  context: FieldFeedbackContext;\n\n  key: number;\n\n  constructor(props: FieldFeedbackProps, context: FieldFeedbackContext) {\n    super(props);\n\n    this.validate = this.validate.bind(this);\n\n    this.key = context.fieldFeedbacks.computeFieldFeedbackKey();\n  }\n\n  componentWillMount() {\n    this.context.fieldFeedbacks.addValidateEventListener(this.validate);\n  }\n\n  componentWillUnmount() {\n    this.context.fieldFeedbacks.removeValidateEventListener(this.validate);\n  }\n\n  // Generates Field for Fields structure\n  validate(input: Input) {\n    const { when, warning, info } = this.props;\n    const { for: fieldName } = this.context.fieldFeedbacks.props;\n\n    let show = false;\n\n    if (typeof when === 'function') {\n      const constraintViolation = when(input.value);\n      if (constraintViolation) {\n        show = true;\n      }\n    }\n\n    else if (typeof when === 'string') {\n      const validity = input.validity;\n\n      if (!validity.valid) {\n        if (when === '*') {\n          show = true;\n        }\n        else if (\n          validity.badInput && when === 'badInput' ||\n          validity.patternMismatch && when === 'patternMismatch' ||\n          validity.rangeOverflow && when === 'rangeOverflow' ||\n          validity.rangeUnderflow && when === 'rangeUnderflow' ||\n          validity.stepMismatch && when === 'stepMismatch' ||\n          validity.tooLong && when === 'tooLong' ||\n          validity.tooShort && when === 'tooShort' ||\n          validity.typeMismatch && when === 'typeMismatch' ||\n          validity.valueMissing && when === 'valueMissing') {\n\n          show = true;\n        }\n      }\n    }\n\n    else {\n      throw new TypeError(`Invalid FieldFeedback 'when' type: ${typeof when}`);\n    }\n\n    // Update the Fields structure\n    const field = this.context.form.fieldsStore.cloneField(fieldName);\n    field.dirty = true;\n    field.validationMessage = input.validationMessage;\n    if (show) {\n      // No need to \"append if not already there\": Set ignores duplicates\n      if (warning) field.warnings.add(this.key);\n      else if (info) field.infos.add(this.key);\n      else field.errors.add(this.key); // Feedback type is error if nothing is specified\n    }\n    this.context.form.fieldsStore.updateField(fieldName, field);\n  }\n\n  render() {\n    const { when, error, warning, info, className, children, ...divProps } = this.props;\n    const { for: fieldName, show } = this.context.fieldFeedbacks.props;\n\n    // Retrieve errors/warnings/infos only related to the parent FieldFeedbacks\n    const { errors, warnings, infos, validationMessage } = this.context.form.fieldsStore.getFieldFor(fieldName, this.context.fieldFeedbacks.key);\n\n    const firstError = errors.values().next().value;\n    const firstWarning = warnings.values().next().value;\n\n    let classes: string | undefined;\n    if (errors.has(this.key) && (show === 'all' || (show === 'first' && firstError === this.key))) {\n      classes = 'error';\n    }\n    else if (warnings.has(this.key) && (errors.size === 0 && (show === 'all' || (show === 'first' && firstWarning === this.key)))) {\n      classes = 'warning';\n    }\n    else if (infos.has(this.key)) {\n      classes = 'info';\n    }\n\n    let feedback = null;\n    if (classes !== undefined) { // Means the FieldFeedback should be displayed\n      classes = className !== undefined ? `${className} ${classes}` : classes;\n      feedback = children !== undefined ? children : validationMessage;\n    }\n\n    return feedback !== null ? <div {...divProps} className={classes}>{feedback}</div> : null;\n  }\n}\n"],"names":["tslib_1.__extends","FieldEvent","tslib_1.__spread","React.Component","React.createElement","PropTypes.object"],"mappings":"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"}